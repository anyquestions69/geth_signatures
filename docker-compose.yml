version: "1.0"

services:
  app:
    container_name: app
    build: app/
    working_dir:
      /usr/src/app
    ports:
      - "80:80"
    depends_on:
      - db
    networks:
      - network
    env_file:
      - ./app/.env
    command: npm run start

  # Контейнер с базой данных
  db:
    container_name: db
    image: postgres:12-alpine
    #build: db_data/
    environment:
      #POSTGRES_DB: "mydb"
      POSTGRES_USER: "public_hysteria"
      POSTGRES_PASSWORD: "0666"
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
      PGDATA: /var/lib/postgresql/data/db_d
    volumes:
      - ./db_data:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - network
    restart: always

  geth:
    image: ethereum/client-go
    pull_policy: always
    container_name: geth
    restart: unless-stopped
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
      - 8546:8546
      - 8551:8551
    volumes:
      - ${GETH_DATADIR:-./data/geth}:/root/.ethereum
    stop_signal: SIGINT
    stop_grace_period: 2m
    healthcheck:
      test: [ "CMD-SHELL", "geth attach --exec eth.blockNumber" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --http
      - --http.api=eth,net,web3,personal,admin
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/root/.ethereum/jwt.hex
      - --authrpc.port=8551
      - --txlookuplimit=0
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: 10
  

volumes:
    db_data:


networks:
  network: {}
